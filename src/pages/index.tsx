import React, { useState } from "react";
import Head from "next/head";
import { api } from "~/utils/api";

export default function Home() {
  const [text, setText] = useState("");
  const [isEdit, setIsEdit] = useState(false);
  const [editingTodoId, setEditingTodoId] = useState(null);

  const todoData = api.todo.getAll.useQuery();
  const utils = api.useUtils();

  const { data: todos = [] } = todoData;
  const createTodo = api.todo.create.useMutation({
    onSuccess: async () => {
      await utils.todo.getAll.invalidate();
    },
  });
  const deleteTodo = api.todo.delete.useMutation({
    onSuccess: async () => {
      await utils.todo.getAll.invalidate();
    },
  });

  const updateTodo = api.todo.update.useMutation({
    onSuccess: async () => {
      await utils.todo.getAll.invalidate();
    },
  });

  const handleSubmit = (e) => {
    e.preventDefault();
    createTodo.mutate({ text, status: false });
    setText("");
  };

  const handleDelete = (id: string) => {
    deleteTodo.mutate({ id });
  };

  const handleUpdate = (id: number, text: string) => {
    updateTodo.mutate({ id, text });
    setEditingTodoId(null);
  };

  return (
    <>
      <Head>
        <title>Todo Application</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="mt-10 flex min-h-screen w-full flex-col items-center p-10">
        <h1 className="text-3xl">Todo Application</h1>
        <div className="m-20 w-full">
          <form onSubmit={handleSubmit}>
            <input
              type="text "
              value={text}
              onChange={(e) => setText(e.target.value)}
              className="w-full rounded-md border-2 p-2"
              placeholder="Type your todo"
            />
            <button className="my-2 rounded-lg bg-gray-200 p-2 px-4">
              Add Task
            </button>
          </form>
          <div className="mt-5  p-2">
            {todos.map((item) => (
              <div
                key={item.id}
                className="my-4 flex justify-between bg-gray-200 p-2"
              >
                {editingTodoId === item.id ? (
                  <TodoEditForm item={item} onUpdate={handleUpdate} />
                ) : (
                  <div className="flex w-full justify-between">
                    <p className="text-lg">{item.text}</p>
                    <div className="flex gap-4">
                      <button onClick={() => setEditingTodoId(item.id)}>
                        Edit
                      </button>
                      <button onClick={() => handleDelete(item.id)}>
                        Delete
                      </button>
                    </div>
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>
      </main>
    </>
  );
}

const TodoEditForm = ({ item, onUpdate }) => {
  const { id, text } = item;
  const [newText, setNewText] = useState(text);

  const handleSubmit = (e) => {
    e.preventDefault();
    onUpdate(id, newText);
  };

  return (
    <form onSubmit={handleSubmit}>
      <input
        className="mx-2 rounded-md p-2"
        type="text"
        value={newText}
        onChange={(e) => setNewText(e.target.value)}
      />
      <button type="submit">Save</button>
    </form>
  );
};
